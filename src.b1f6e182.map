{"version":3,"sources":["src/models/todo.js","src/controllers/todo.js","src/models/storage.js","src/elements/container.js","src/elements/header.js","src/elements/main.js","src/elements/footer.js","src/elements/index.js","src/app.js","src/index.js"],"names":["counter","updateId","init","Todo","title","ENTER_KEY","ESC_KEY","initController","window","storage","updateFuncs","items","get","update","func","set","onhashchange","subscribe","hash","str","location","slice","push","filter","f","h","todo","completed","index","event","target","closest","dataset","value","trim","keyCode","length","splice","type","destroy","blur","forEach","checked","initStorage","localStorage","name","JSON","parse","getItem","setItem","stringify","MyContainer","HyperHTMLElement","render","html","data","define","e","MyHeader","controller","create","MyMain","dblclick2Edit","li","classList","add","querySelector","focus","blur2Save","remove","edit","hyper","getItems","indexOf","complete","todos","getFilteredItems","toggleAll","every","map","renderTodo","selectIfMatch","curr","showIfSomeTodos","pluralize","showIfSomeComplete","numTodosIncomplete","numTodos","MyFooter","todosSize","todosLeft","clear","appRender","document"],"mappings":"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","file":"src.b1f6e182.map","sourceRoot":"..","sourcesContent":["let counter = 0;\n\nexport const updateId = (init, counter) => init ? 0 : counter++;\n\nexport const Todo = (title, init) => ({\n\ttitle,\n\tid: updateId(init, counter),\n\tcompleted: false\n});\n","import { Todo } from '../models/todo';\n\nexport const ENTER_KEY = 13;\nexport const ESC_KEY = 27;\n\nexport const initController = (window, storage) => {\n\n\tlet updateFuncs = [];\n\tlet items = storage.get();\n\n\tconst update = () => {\n\t\tfor (let func of updateFuncs) {\n\t\t\tfunc();\n\t\t};\n\t\tstorage.set(items);\n\t};\n\twindow.onhashchange = update;\n\n\tconst subscribe = func => {\n\t\tupdateFuncs.push(func);\n\t\treturn () => {updateFuncs = updateFuncs.filter(f => f != func)}\n\t};\t\n\n\tconst getItems = () => items;\n\tconst getFilteredItems = () => {\n\t\tconst h = hash();\n\t\treturn (h !== 'all') ?\n\t\t\titems.filter(\n\t\t\t\th === 'active' ?\n\t\t\t\t\ttodo => !todo.completed :\n\t\t\t\t\ttodo => todo.completed\n\t\t\t) :\n\t\t\titems;\n\t};\n\n\t// controller actions invoked through the DOM\n\n\tconst clear = () => {\n\t\titems = items.filter(todo => !todo.completed);\n\t\tupdate();\n\t}\n\n\tconst complete = event => {\n\t\tconst index = event.target.closest('li').dataset.index;\n\t\tconst todo = items[index];\n\t\ttodo.completed = !todo.completed;\n\t\tupdate();\n\t}\n\n\tconst create = event => {\n\t\tconst target = event.target;\n\t\tconst value = target.value.trim();\n\t\tif (event.keyCode === ENTER_KEY && value.length) {\n\t\t\titems.push(Todo(value));\n\t\t\ttarget.value = '';\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tconst destroy = event => {\n\t\tconst index = event.target.closest('li').dataset.index;\n\t\titems.splice(index, 1);\n\t\tupdate();\n\t}\n\n\tconst edit = event => {\n\t\tconst {type, keyCode, target} = event;\n\t\tif (type === 'blur' || keyCode === ENTER_KEY) {\n\t\t\tconst value = target.value.trim();\n\t\t\tif (value.length) {\n\t\t\t\tconst index = target.closest('li').dataset.index;\n\t\t\t\titems[index].title = value;\n\t\t\t\tupdate();\n\t\t\t} else {\n\t\t\t\tif (type === 'blur') {\n\t\t\t\t\tcontroller.destroy(event);\n\t\t\t\t} else {\n\t\t\t\t\ttarget.blur();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst hash = () => {\n\t\tconst str = window.location.hash.slice(2);\n\t\treturn str !== 'completed' && str !== 'active' ? 'all' : str;\n\t}\n\n\tconst todosLeft = () => items.filter(todo => !todo.completed).length;\n\n\tconst todosSize = () => items.length;\n\n\tconst toggleAll = event => {\n\t\titems.forEach(todo => {\n\t\t\ttodo.completed = event.target.checked;\n\t\t});\n\t\tupdate();\n\t}\n\n\treturn {\n\t\tsubscribe,\n\t\tgetItems,\n\t\tgetFilteredItems,\n\t\tclear,\n\t\tcomplete,\n\t\tcreate,\n\t\tdestroy,\n\t\tedit,\n\t\thash,\n\t\ttodosLeft,\n\t\ttodosSize,\n\t\ttoggleAll,\n\t\tupdate\n\t}\n\n}\n","export function initStorage(localStorage) {\n\tconst name = 'todos-hyperHTML';\n\treturn {\n\t\tget: () => JSON.parse(localStorage.getItem(name) || '[]'),\n\t\tset: value => localStorage.setItem(name, JSON.stringify(value))\n\t}\n};\n","export class MyContainer extends HyperHTMLElement {\n\tcreated() {\n\t\tthis.render();\n\t}\n\trender() {\n\t\treturn this.html`\n\t\t\t<my-header data=${this.data}></my-header>\n\t\t\t<my-main data=${this.data}></my-main>\n\t\t\t<my-footer data=${this.data}></my-footer>`\n\t}\n}\ntry { \n\tMyContainer.define('my-container') \n} catch (e) {}\n","export class MyHeader extends HyperHTMLElement {\n\tcreated() {\n\t\tthis.render();\n\t}\n\trender() {\n\t\treturn this.html`\n\t\t\t<header class=\"header\">\n\t\t\t\t<h1>todos</h1>\n\t\t\t\t<input \n\t\t\t\t\tonkeypress=\"${this.data.controller.create}\" \n\t\t\t\t\tclass=\"new-todo\" \n\t\t\t\t\tplaceholder=\"What needs to be done?\" \n\t\t\t\t\tautofocus>\n\t\t\t</header>`\n\t}\n}\ntry { \n\tMyHeader.define('my-header') \n} catch (e) {}\n","import { ENTER_KEY, ESC_KEY } from '../controllers/todo';\n\nexport class MyMain extends HyperHTMLElement {\n\n\tcreated() {\n\t\tthis.render();\n\t\tthis.data.controller.subscribe(() => this.render());\n\t}\n\n\trenderTodo() {\n\n\t\tconst controller = this.data.controller;\n\n\t\tfunction dblclick2Edit() {\n\t\t\tconst li = this.closest('li');\n\t\t\tli.classList.add('editing');\n\t\t\tli.querySelector('.edit').focus();\n\t\t}\n\t\t\n\t\tfunction blur2Save(event) {\n\t\t\tthis.closest('li').classList.remove('editing');\n\t\t\tcontroller.edit(event);\n\t\t}\n\n\t\tfunction edit(event) {\n\t\t\tif (event.keyCode === ENTER_KEY) {\t\t\t\n\t\t\t\tthis.closest('li').classList.remove('editing');\n\t\t\t}\n\t\t\tcontroller.edit(event);\n\t\t}\n\n\t\treturn todo => this.data.hyper(todo)`\n\t\t\t<li\n\t\t\t\tdata-index=\"${controller.getItems().indexOf(todo)}\"\n\t\t\t\tclass=\"${todo.completed ? 'completed' : ''}\"\n\t\t\t>\n\t\t\t\t<div class=\"view\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"toggle\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked=\"${todo.completed}\"\n\t\t\t\t\t\tonclick=\"${controller.complete}\">\n\t\t\t\t\t<label ondblclick=\"${dblclick2Edit}\">\n\t\t\t\t\t\t${todo.title}\n\t\t\t\t\t</label>\n\t\t\t\t\t<button class=\"destroy\" onclick=\"${controller.destroy}\"></button>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tclass=\"edit\"\n\t\t\t\t\tvalue=\"${todo.title}\"\n\t\t\t\t\tonblur=\"${blur2Save}\"\n\t\t\t\t\tonkeypress=\"${edit}\"\n\t\t\t\t\tonkeydown=\"${function escape2Reset(event) {\n\t\t\t\t\t\tif (event.keyCode === ESC_KEY) {\n\t\t\t\t\t\t\tthis.value = todo.title;\n\t\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\">\n\t\t\t</li>`;\n\t}\n\n\trender() {\n\t\tconst controller = this.data.controller;\n\t\tconst todos = controller.getFilteredItems();\n\t\treturn this.html`\n\t\t\t<section class=\"main\" style=\"${todos.length ? '' : 'display:none'}\">\n\t\t\t\t<input\n\t\t\t\t\tclass=\"toggle-all\"\n\t\t\t\t\tid=\"toggle-all\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonclick=\"${controller.toggleAll}\"\n\t\t\t\t\tchecked=\"${todos.every(todo => todo.completed)}\">\n\t\t\t\t<label for=\"toggle-all\">Mark all as complete</label>\n\t\t\t\t<ul class=\"todo-list\">${todos.map(this.renderTodo())}</ul>\n\t\t\t</section>`\n\t}\n}\ntry { \n\tMyMain.define('my-main') \n} catch (e) {}\n","export const selectIfMatch = (hash, curr) => hash === curr ? 'selected' : '';\nexport const showIfSomeTodos = length => length > 0 ? '' : 'display: none';\nexport const pluralize = length => length >= 2 ? 's' : '';\nexport const showIfSomeComplete = (numTodosIncomplete, numTodos) => numTodosIncomplete < numTodos ? '' : 'display: none'\n\nexport class MyFooter extends HyperHTMLElement {\n\tcreated(){\n\t\tthis.render();\n\t\tthis.data.controller.subscribe(() => this.render());\n\t}\n\trender() {\n\t\tconst controller = this.data.controller;\n\t\tconst numTodos = controller.todosSize();\n\t\tconst numTodosIncomplete = controller.todosLeft();\n\t\tconst hash = controller.hash();\n\t\t\n\t\treturn this.html`\n\t\t\t<footer class=\"footer\" style=\"${showIfSomeTodos(numTodos)}\">\n\t\t\t\t<span class=\"todo-count\">\n\t\t\t\t\t<strong> ${numTodosIncomplete} </strong> item${pluralize(numTodosIncomplete)} left\n\t\t\t\t</span>\n\t\t\t\t<ul class=\"filters\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a class=\"${selectIfMatch(hash, 'all')}\" href=\"#/\">All</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a class=\"${selectIfMatch(hash, 'active')}\" href=\"#/active\">Active</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a class=\"${selectIfMatch(hash, 'completed')}\" href=\"#/completed\">Completed</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<button class=\"clear-completed\" onclick=\"${controller.clear}\" style=\"${showIfSomeComplete(numTodosIncomplete, numTodos)}\">Clear completed</button>\n\t\t\t</footer>`\n\t}\n}\ntry { \n\tMyFooter.define('my-footer') \n} catch (e) {};\n","import './container';\nimport './header';\nimport './main';\nimport './footer';\n","import { initController } from './controllers/todo';\nimport { initStorage } from './models/storage';\nimport './elements';\n\nconst hyper = HyperHTMLElement.hyper;\n\nconst storage = initStorage(window.localStorage);\nconst controller = initController(window, storage);\nconst data = { controller, hyper };\nconst appRender = hyper(window.document.querySelector('#todoapp'));\n\nappRender`<my-container data=${data}></my-container>`;\ncontroller.update(); \n","import \"todomvc-common/base.css\";\nimport \"todomvc-app-css/index.css\";\nimport { initApp } from './app.js';\n\nconst hyper = HyperHTMLElement.hyper;\n\ninitApp(hyper, window);\n\n"]}