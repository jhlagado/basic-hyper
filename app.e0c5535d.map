{"version":3,"sources":["src/models/todo.js","src/controllers/todo.js","src/models/storage.js","src/elements/container.js","src/elements/header.js","src/elements/todo-list.js","src/elements/todo-item.js","src/elements/footer.js","src/elements/index.js","src/app.js"],"names":["counter","updateId","init","Todo","title","ENTER_KEY","ESC_KEY","initController","window","storage","updateFuncs","items","get","update","func","set","onhashchange","subscribe","hash","str","location","slice","push","filter","f","h","todo","completed","index","event","keyCode","target","value","trim","length","splice","type","closest","dataset","destroy","blur","forEach","checked","initStorage","localStorage","name","JSON","parse","getItem","setItem","stringify","MyContainer","HyperHTMLElement","render","html","data","define","e","MyHeader","controller","create","TodoList","todos","getFilteredItems","toggleAll","every","map","hyper","TodoItem","observedAttributes","oldValue","newValue","input","li","classList","add","querySelector","focus","remove","edit","complete","element","getAttribute","dblclick2Edit","blur2Save","escape2Reset","selectIfMatch","curr","showIfSomeTodos","pluralize","showIfSomeComplete","numTodosIncomplete","numTodos","MyFooter","todosSize","todosLeft","clear","initApp","appRender","document"],"mappings":"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","file":"app.e0c5535d.map","sourceRoot":"..","sourcesContent":["let counter = 0;\n\nexport const updateId = (init, counter) => init ? 0 : counter++;\n\nexport const Todo = (title, init) => ({\n\ttitle,\n\tid: updateId(init, counter),\n\tcompleted: false\n});\n","import { Todo } from '../models/todo';\n\nexport const ENTER_KEY = 13;\nexport const ESC_KEY = 27;\n\nexport const initController = (window, storage) => {\n\n\tlet updateFuncs = [];\n\tlet items = storage.get();\n\n\tconst update = () => {\n\t\tfor (let func of updateFuncs) {\n\t\t\tfunc();\n\t\t};\n\t\tstorage.set(items);\n\t};\n\twindow.onhashchange = update;\n\n\tconst subscribe = func => {\n\t\tupdateFuncs.push(func);\n\t\treturn () => {updateFuncs = updateFuncs.filter(f => f != func)}\n\t};\t\n\n\tconst getItems = () => items;\n\tconst getFilteredItems = () => {\n\t\tconst h = hash();\n\t\treturn (h !== 'all') ?\n\t\t\titems.filter(\n\t\t\t\th === 'active' ?\n\t\t\t\t\ttodo => !todo.completed :\n\t\t\t\t\ttodo => todo.completed\n\t\t\t) :\n\t\t\titems;\n\t};\n\n\t// controller actions invoked through the DOM\n\n\tconst clear = () => {\n\t\titems = items.filter(todo => !todo.completed);\n\t\tupdate();\n\t}\n\n\tconst complete = index => {\n\t\tconst todo = items[index];\n\t\ttodo.completed = !todo.completed;\n\t\tupdate();\n\t}\n\n\tconst create = event => {\n\t\tconst {keyCode, target} = event;\n\t\tconst value = target.value.trim();\n\t\tif (keyCode === ENTER_KEY && value.length) {\n\t\t\titems.push(Todo(value));\n\t\t\ttarget.value = '';\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tconst destroy = index => {\n\t\titems.splice(index, 1);\n\t\tupdate();\n\t}\n\n\tconst edit = (index, event) => {\n\t\tconst {type, keyCode, target} = event;\n\t\tif (type === 'blur' || keyCode === ENTER_KEY) {\n\t\t\tconst value = target.value.trim();\n\t\t\tif (value.length) {\n\t\t\t\tconst index = target.closest('li').dataset.index;\n\t\t\t\titems[index].title = value;\n\t\t\t\tupdate();\n\t\t\t} else {\n\t\t\t\tif (type === 'blur') {\n\t\t\t\t\tcontroller.destroy(index);\n\t\t\t\t} else {\n\t\t\t\t\ttarget.blur();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst hash = () => {\n\t\tconst str = window.location.hash.slice(2);\n\t\treturn str !== 'completed' && str !== 'active' ? 'all' : str;\n\t}\n\n\tconst todosLeft = () => items.filter(todo => !todo.completed).length;\n\n\tconst todosSize = () => items.length;\n\n\tconst toggleAll = event => {\n\t\titems.forEach(todo => {\n\t\t\ttodo.completed = event.target.checked;\n\t\t});\n\t\tupdate();\n\t}\n\n\treturn {\n\t\tsubscribe,\n\t\tgetItems,\n\t\tgetFilteredItems,\n\t\tclear,\n\t\tcomplete,\n\t\tcreate,\n\t\tdestroy,\n\t\tedit,\n\t\thash,\n\t\ttodosLeft,\n\t\ttodosSize,\n\t\ttoggleAll,\n\t\tupdate\n\t}\n\n}\n","export function initStorage(localStorage) {\n\tconst name = 'todos-hyperHTML';\n\treturn {\n\t\tget: () => JSON.parse(localStorage.getItem(name) || '[]'),\n\t\tset: value => localStorage.setItem(name, JSON.stringify(value))\n\t}\n};\n","export class MyContainer extends HyperHTMLElement {\n\tcreated() {\n\t\tthis.render();\n\t}\n\trender() {\n\t\treturn this.html`\n\t\t\t<my-header data=${this.data}></my-header>\n\t\t\t<todo-list data=${this.data}></todo-list>\n\t\t\t<my-footer data=${this.data}></my-footer>`\n\t}\n}\ntry { \n\tMyContainer.define('my-container') \n} catch (e) {}\n","export class MyHeader extends HyperHTMLElement {\n\tcreated() {\n\t\tthis.render();\n\t}\n\trender() {\n\t\treturn this.html`\n\t\t\t<header class=\"header\">\n\t\t\t\t<h1>todos</h1>\n\t\t\t\t<input \n\t\t\t\t\tonkeypress=\"${this.data.controller.create}\" \n\t\t\t\t\tclass=\"new-todo\" \n\t\t\t\t\tplaceholder=\"What needs to be done?\" \n\t\t\t\t\tautofocus>\n\t\t\t</header>`\n\t}\n}\ntry { \n\tMyHeader.define('my-header') \n} catch (e) {}\n","export class TodoList extends HyperHTMLElement {\n\n\tcreated() {\n\t\tthis.render();\n\t\tthis.data.controller.subscribe(() => this.render());\n\t}\n\n\trender() {\n\n\t\tconst controller = this.data.controller;\n\t\tconst todos = controller.getFilteredItems();\n\t\treturn this.html`\n\t\t\t<section class=\"main\" style=\"${todos.length ? '' : 'display:none'}\">\n\t\t\t\t<input\n\t\t\t\t\tclass=\"toggle-all\"\n\t\t\t\t\tid=\"toggle-all\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonclick=\"${controller.toggleAll}\"\n\t\t\t\t\tchecked=\"${todos.every(todo => todo.completed)}\">\n\t\t\t\t<label for=\"toggle-all\">Mark all as complete</label>\n\t\t\t\t<ul class=\"todo-list\">${todos.map(\n\t\t\t\t\t(todo, index) => this.data.hyper(todo)`\n\t\t\t\t\t\t<todo-item \n\t\t\t\t\t\t\ttitle=${todo.title}\n\t\t\t\t\t\t\tcompleted=${todo.completed}\n\t\t\t\t\t\t\tindex=${index}\n\t\t\t\t\t\t\tdata=${{controller}} />`\n\t\t\t\t)}</ul>\n\t\t\t</section>`\n\t}\n}\ntry { \n\tTodoList.define('todo-list') \n} catch (e) {}\n","import { ENTER_KEY, ESC_KEY } from '../controllers/todo';\n\nexport class TodoItem extends HyperHTMLElement {\n\n\tstatic get observedAttributes() { return ['title','index','completed']; }\n\t\n\tcreated() {\n\t\tthis.render();\n\t}\n\t\n\tattributeChangedCallback(name, oldValue, newValue) { \n\t\tthis.render(); \n\t}\t\n\t\n\tdblclick2Edit(event, input) {\n\t\tconst li = input.closest('li');\n\t\tli.classList.add('editing');\n\t\tli.querySelector('.edit').focus();\n\t}\n\t\n\tblur2Save(index, event, input) {\n\t\tinput.closest('li').classList.remove('editing');\n\t\tthis.data.controller.edit(index, event);\n\t}\n\n\tedit(index, event, input) {\n\t\tif (event.keyCode === ENTER_KEY) {\t\t\t\n\t\t\tinput.closest('li').classList.remove('editing');\n\t\t}\n\t\tthis.data.controller.edit(index, event);\n\t}\n\n\tescape2Reset(event, input) {\n\t\tif (event.keyCode === ESC_KEY) {\n\t\t\tinput.value = this.data.todo.title;\n\t\t\tinput.blur();\n\t\t}\n\t}\n\n\tcomplete(index) {\n\t\tthis.data.controller.complete(index);\n\t}\n\n\tdestroy(index) {\n\t\tthis.data.controller.destroy(index);\n\t}\n\n\trender(){\n\t\tconst element = this;\n\t\tconst title = this.getAttribute('title');\n\t\tconst completed = this.getAttribute('completed');\n\t\tconst index = this.getAttribute('index');\n\n\t\treturn this.html`\n\t\t<li\n\t\t\tdata-index=\"${index}\"\n\t\t\tclass=\"${completed ? 'completed' : ''}\"\n\t\t>\n\t\t\t<div class=\"view\">\n\t\t\t\t<input\n\t\t\t\t\tclass=\"toggle\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked=\"${completed}\"\n\t\t\t\t\tonclick=\"${() => element.complete(index)}\">\n\t\t\t\t<label ondblclick=\"${function(event){\n\t\t\t\t\telement.dblclick2Edit(event, this);\n\t\t\t\t}}\">${title}</label>\n\t\t\t\t<button class=\"destroy\" onclick=\"${() => element.destroy(index)}\"></button>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\tclass=\"edit\"\n\t\t\t\tvalue=\"${title}\"\n\t\t\t\tonblur=\"${function(event){ \n\t\t\t\t\telement.blur2Save(index, event, this);\n\t\t\t\t}}\"\n\t\t\t\tonkeypress=\"${function(event){\n\t\t\t\t\telement.edit(index, event, this);\n\t\t\t\t}}\"\n\t\t\t\tonkeydown=\"${function (event) {\n\t\t\t\t\telement.escape2Reset(event, this);\n\t\t\t\t}}\">\n\t\t</li>`;\n\t}\n}\n\ntry { \n\tTodoItem.define('todo-item') \n} catch (e) {}\n","export const selectIfMatch = (hash, curr) => hash === curr ? 'selected' : '';\nexport const showIfSomeTodos = length => length > 0 ? '' : 'display: none';\nexport const pluralize = length => length >= 2 ? 's' : '';\nexport const showIfSomeComplete = (numTodosIncomplete, numTodos) => numTodosIncomplete < numTodos ? '' : 'display: none'\n\nexport class MyFooter extends HyperHTMLElement {\n\tcreated(){\n\t\tthis.render();\n\t\tthis.data.controller.subscribe(() => this.render());\n\t}\n\trender() {\n\t\tconst controller = this.data.controller;\n\t\tconst numTodos = controller.todosSize();\n\t\tconst numTodosIncomplete = controller.todosLeft();\n\t\tconst hash = controller.hash();\n\t\t\n\t\treturn this.html`\n\t\t\t<footer class=\"footer\" style=\"${showIfSomeTodos(numTodos)}\">\n\t\t\t\t<span class=\"todo-count\">\n\t\t\t\t\t<strong> ${numTodosIncomplete} </strong> item${pluralize(numTodosIncomplete)} left\n\t\t\t\t</span>\n\t\t\t\t<ul class=\"filters\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a class=\"${selectIfMatch(hash, 'all')}\" href=\"#/\">All</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a class=\"${selectIfMatch(hash, 'active')}\" href=\"#/active\">Active</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a class=\"${selectIfMatch(hash, 'completed')}\" href=\"#/completed\">Completed</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<button class=\"clear-completed\" onclick=\"${controller.clear}\" style=\"${showIfSomeComplete(numTodosIncomplete, numTodos)}\">Clear completed</button>\n\t\t\t</footer>`\n\t}\n}\ntry { \n\tMyFooter.define('my-footer') \n} catch (e) {};\n","import './container';\nimport './header';\nimport './todo-list';\nimport './todo-item';\nimport './footer';\n","import { initController } from './controllers/todo';\nimport { initStorage } from './models/storage';\n\nimport './elements';\n\nexport function initApp() {\n    const hyper = HyperHTMLElement.hyper;\n\n    const storage = initStorage(window.localStorage);\n    const controller = initController(window, storage);\n    const data = { controller, hyper };\n    const appRender = hyper(window.document.querySelector('#todoapp'));\n    \n    appRender`<my-container data=${data}></my-container>`;\n    controller.update(); \n}\n"]}